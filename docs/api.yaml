openapi: 3.0.3
info:
  title: FreshCart Market API
  description: FreshCart Market API documentation
  version: 1.0.0
servers:
  - url: 'http://localhost:3000/api'
    description: Local server
paths:
  /products:
    get:
      summary: Get all available products
      operationId: getAllAvailableProducts
      description: Get all available products (quantity > 0).
      tags:
        - Products
      parameters:
        - $ref: '#/components/parameters/paginationOffset'
        - $ref: '#/components/parameters/paginationLimit'
      responses:
        '200':
          description: A list of products.
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
                  size:
                    type: integer
                    description: The number of products in the result set.
                required:
                  - results
                  - size
        '422':
          $ref: '#/components/responses/ValidationError'
  /categories:
    get:
      summary: Get all categories
      operationId: getAllCategories
      description: Get all categories with the number of products assigned to them.
      tags:
        - Categories
      responses:
        '200':
          description: A list of categories.
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Category'
                        - type: object
                          properties:
                            numOfProducts:
                              type: integer
                              description: The number of products assigned to the category.
                          required:
                            - numOfProducts
                  size:
                    type: integer
                    description: The number of categories in the result set.
                required:
                  - results
                  - size
components:
  parameters:
    paginationOffset:
      in: query
      name: offset
      required: false
      schema:
        type: integer
        minimum: 0
        default: 0
      description: The number of items to skip before starting to collect the result set.
    paginationLimit:
      in: query
      name: limit
      required: false
      schema:
        type: integer
        minimum: 1
        default: 25
      description: The numbers of items to return.
  schemas:
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: The category ID.
          readOnly: true
        name:
          type: string
          description: The category name.
          example: Fruits
      required:
        - id
        - name
    Product:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: The product ID.
          readOnly: true
        name:
          type: string
          description: The product name.
        price:
          type: number
          format: float
          description: The product price.
        stockQuantity:
          type: integer
          description: The product stock quantity.
        category:
          type: integer
          description: The category ID.
        imageUrl:
          type: string
          format: uri
          description: The image url.
          nullable: true
      required:
        - id
        - name
        - price
        - stockQuantity
        - category
      example:
        id: 1
        name: Apple
        price: 1.99
        quantity: 100
        imageUrl: null
        category: 2
  responses:
    ValidationError:
      description: The parameters or the body of the request are invalid.
      content:
        text/plain:
          schema:
            type: string
            example: 'Invalid parameters or request body.'
security: []
